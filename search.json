[{"title":"","url":"http://codea.ink/2022/01/20/Azure Active Directory Pentesting - Part 1/","content":"<h1 id=\"Azure-Active-Directory-Pentesting-Part-1\"><a href=\"#Azure-Active-Directory-Pentesting-Part-1\" class=\"headerlink\" title=\"Azure Active Directory Pentesting - Part 1\"></a>Azure Active Directory Pentesting - Part 1</h1><hr>\n<p>layout: p<br>title: Azure Active Directory Pentesting - Part 1<br>categories: 技术<br>tags: [Azure,Pentest]</p>\n<blockquote>\n<p>Azure Active Directory (Azure AD) 是Microsoft基于Azure云的身份验证和访问管理服务，用户通过Azure AD可以连接本地Windows AD和Office 365,SharePoint,Teams等在线应用。</p>\n</blockquote>\n<p>​        这个系列将会介绍Azure AD以及对其的攻击思路，需要说明的是，对Azure AD的攻击并不会基于其本身的安全漏洞，而是针对Azure AD用户使用的安全策略和不安全的配置。</p>\n<p>​        Part1主要介绍Azure AD的基本概念，术语和身份认证功能。</p>\n<h2 id=\"0x00-Azure-AD-概述\"><a href=\"#0x00-Azure-AD-概述\" class=\"headerlink\" title=\"0x00 Azure AD 概述\"></a>0x00 Azure AD 概述</h2><p>​        根据Microsoft提供的官方文档<a href=\"https://docs.microsoft.com/en-gb/azure/active-directory/fundamentals/active-directory-whatis\">https://docs.microsoft.com/en-gb/azure/active-directory/fundamentals/active-directory-whatis</a></p>\n<blockquote>\n<p>Azure Active Directory (Azure AD) is Microsoft’s cloud-based identity and access management service, which helps your employees sign in and access resources in:</p>\n<ul>\n<li>External resources, such as Microsoft 365, the Azure portal, and thousands of other SaaS applications.</li>\n<li>Internal resources, such as apps on your corporate network and intranet, along with any cloud apps developed by your own organization. For more information about creating a tenant for your organization, see <a href=\"https://docs.microsoft.com/en-gb/azure/active-directory/fundamentals/active-directory-access-create-new-tenant\">Quickstart: Create a new tenant in Azure Active Directory</a>.</li>\n</ul>\n</blockquote>\n<p>​        尽管Azure AD的名字很具有误导性,但是不能简单地把它理解为运行在Azure上的Active Directory,两种服务之间的大致的对应关系如下图:<img src=\"https://www.synacktiv.com/sites/default/files/inline-images/AzureADvsAD.png\" alt=\"https://troopers.de/downloads/troopers19/TROOPERS19_AD_Im_in_your_cloud.pdf\"></p>\n<p>​        将本地AD域与Azure AD集成的方法主要有三种：PHS、PTA、ADFS。其中PHS（密码哈希同步）和PTA（传递身份认证）都存在相关的潜在攻击路径。</p>\n<h2 id=\"0x01-Azure-AD-Connect\"><a href=\"#0x01-Azure-AD-Connect\" class=\"headerlink\" title=\"0x01 Azure AD Connect\"></a>0x01 Azure AD Connect</h2><h3 id=\"PHS\"><a href=\"#PHS\" class=\"headerlink\" title=\"PHS\"></a>PHS</h3><p>​        PHS是用于实现混合标识登陆的一种方法。通过Azure AD Connect 可将本地AD用户的密码哈希同步到Azure AD上，这种方式的好处是减少密码管理的工作量，用户可以在Azure AD服务和本地AD中使用相同的密码。</p>\n<p><img src=\"https://docs.microsoft.com/en-us/azure/active-directory/hybrid/media/how-to-connect-password-hash-synchronization/arch1.png\" alt=\"什么是 Azure AD Connect\"></p>\n<p>​        Azure AD为同步到云上的密码提供了泄露检测，即网络上出现大规模密码泄露事件时，与泄露数据匹配的账户将会被自动标记到高风险区域。</p>\n<p>​        PHS同样可以作为ADFS联合身份验证的一种备用验证方式，所以对PHS进行的攻击同样可以威胁到使用ADFS进行身份验证的应用。</p>\n<p>​    <img src=\"https://www.synacktiv.com/sites/default/files/inline-images/azuread_connect_0.png\" alt=\"小灵通工作流程\"></p>\n<p>​        上图为PHS的工作原理，可以看出Azure AD connect将在本地和Azure各创建了一个账户用于同步密码哈希，本地账户通常名为MSOL_<code>test</code> ，Azure AD账户为Sync_sync1_test。</p>\n<p>sync1是安装了ad connect的本地服务器主机名，而test是一个跟Azure tenant关联的id。</p>\n<p>​        由于PHS需要操作密码哈希数据，所以<strong>这两个账户拥有各自环境的最高权限</strong>，在后续的部分中，我们会探讨一种通过ad connect账户攻击AD域的方法。</p>\n<h3 id=\"PTA\"><a href=\"#PTA\" class=\"headerlink\" title=\"PTA\"></a>PTA</h3><p>​        对于一些无法将接受密码同步到AD域外所产生风险的用户，Azure AD还提供了另一种身份验证方式PTA(传递身份验证)，这种认证方式会将认证请求通过Azure AD Connect转发到AD。例如AD用户在登录到Web端Outlook时，输入的登陆凭据会被Azure加密后传递到本地Agent，本地Agent对其进行解密并将域控(DC)返回的验证结果传回Azure AD，流程如下图：</p>\n<p><img src=\"https://docs.microsoft.com/en-us/azure/active-directory/hybrid/media/how-to-connect-pta/pta1.png\" alt=\"Azure AD Pass-through Authentication\"></p>\n<p>​        </p>\n<p>不难发现，作为凭据传递的中继Agent服务器，有着解密和查看凭据的权限，获得其控制权即可拦截身份验证请求并获得明文的登陆凭证。</p>\n<h2 id=\"0x02-总结\"><a href=\"#0x02-总结\" class=\"headerlink\" title=\"0x02 总结\"></a>0x02 总结</h2><p>​        这部分主要介绍了Azure AD，以及Azure AD和Active Directory集成进行身份认证的几种方式和其潜在的安全风险，后面的文章我们会详细探讨一下每种风险的利用方式并通过实验环境进行演示，以及针对Azure AD进行信息收集的主要方向。</p>\n<hr>\n<p>参考链接：</p>\n<p><a href=\"https://www.synacktiv.com/en/publications/azure-ad-introduction-for-red-teamers.html\">https://www.synacktiv.com/en/publications/azure-ad-introduction-for-red-teamers.html</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/azure/active-directory/hybrid/whatis-phs\">https://docs.microsoft.com/zh-cn/azure/active-directory/hybrid/whatis-phs</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/azure/active-directory/\">https://docs.microsoft.com/zh-cn/azure/active-directory/</a></p>\n","categories":[],"tags":[]},{"title":"20201213","url":"http://codea.ink/2020/12/13/20201013/","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"3b989a06696262d504ca36a294aa7a35a756f871e56e06611baa5c6dda9b91ba\">9e7eafae5e8af1f5548439f2c32d91097b9f44269a954aa572a230a16b708b0022aee19a2d35b08803ad7f47b0e4fa8b5ec65dab2c56d20eec4258f8b0022894c2a39a3325b42424752c506238663e720facdf0862835de5075a5c53b17824de93ac766636d426df4845e3b26121e515e7f64e4cb16531be0fc6fba5751e5d8991ddbd3443ad663d66d4b32544126d5281ef6356a79d475e66f6e06690d1353e53e43f24dab7f2bbb1874a27a3e4b4e3a65bf89a15b1ee96d189af4872910819026562b081ccf3b5a6b97cea5ea7e96fdb92fe7fb4b1a31496f2bcecf0e56c96924fea7a4825ada81c96d4431ffeb5b3116a306255ae08fde50723dc19e5df1ca66cf4e39ccca90b8c95346c4849a784870db3a02382e8aeafab747f55652ae30ab7252a1d64f136c6565f7c5c4bf6f5ad3d5d96a85baba240888f7fc793025e387a370f9cdd1f91885ba834b492d10ed0dba88e30aa705b5f2a66195276dbc987ce73e4d06862793105e1167c94620419c30784e6bbbfbf4a26df71e022e5dcd886d63012af74b68c2195c20bd43d495b097424f0b49fbbe4c344611446eee404eb7ae7215f6b393a3d9303c2c3286d2aa66bc4d471cf98591c07f5056a988f7f021bd88377867e54aa79f444ed3d55842211aa5acc3a5519cb6014aa6b1ba7b268be4d33ef594aec6311a9b6836cc7c2778a0f547c79096930a518e5bb9a0c04043399083af7bf42bff980e181990945aed6bde7eee6387e7f77ee4a51efec900694601157ccbfde58f27080bf0f69f8792e1a1dc6bddfff07e5c87df5d4ca1db8da7aae11c5b80b3b8bebc35b2ca6721a64ebc53cf16ab291cfad30c25ee358f897196596e26f79984324fcfb6980076911c9cdff02ba173b9e809c875007dc0063f0d4cd138ad9d38beba2fbb82ee4aa228f4db08b4ba62f408d66f4be7e5e4d8134e841ba2a70009f05beac02d167bc1a9fab010eec287baf043f878b8d489586935f7f7e3b7b5acfe3ea1e31d78ed5767508c679c655b3953bb6334987e66912a6c59d270e27c9e66c152cedfe07990c48f1577117f0450882c1e9af9f735391a444224a727c5f52e8de58556cd0668067cf993f7026e12a25883f4b01da0657d411fb13a77d5b42a84592e0f2fd52cca9477dd859253d676b8a0ed5158233f059a23dccfecde865de37ecef5c1d39b460ff573e5e1ef46777a143dcecd2e95c4195e90a55391af0e1ec12374173451334aa20af1ac1e4b99914fb3b6a7bed6f1e066ac0eb3f7ee2c67ecf5141012d0f7d67d2bbb765ebc287c01e966a71eea35ec471533b6a69f2dd6594ab5a58b416e4e3ba078503254711ffc650acaefce33746d52fa4b7ea61082e843f0b8301eed20ff9172b411652d13b0c7533f2069144e677388249419cb48558f5f0b7956fd68fcd203f17841dac709aa844fe04a130d4bf226cdaf034229b0245bd32e83d96ea9d13bb071205d90b004523e5fa7dd2768ed35fcb63da7c20a3ed48655863932ace0832cbe3ddc7158094780deeab7dc604913b8377a59c1f48095dfdda2e9b9907d2d237a235a8ee04a30ad3c670a2f7d70eedcd7998a7e445f8b96457db09df824d59d1ad9f55be2e09c2ad00ce24f7bb66b9609c05605c732a362550bbc66e223ce115f22582020c0731978478260bb7d2d57b93a73bfe636bdbca96b3232133a9610947308f5c5be92e75f8011a96a01952334192de3979c2022efb5447c91e4801f493dcb824987019aa28e55e5cb7975e6fec26b4392774f0005dc1b69418e76c11758a55ceecb5a76ab3a8f08204f25c3b403e9446ec95a4c01862584048376074c2459290bc32ffa36086a93602066789f4c56c6b911d830ab83b1132fc311a0c096cc9963c3035</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","categories":[],"tags":[]},{"title":"使用ArchWiki提供的方法恢复pacman本地数据库","url":"http://codea.ink/2020/11/24/pacmandatabase/","content":"<h1 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h1><p>​        昨天在安装docker的时候，由于/分区空间不足，想通过软链接的方式把docker容器目录更改到/home分区，结果不小心</p>\n<p><code>rm -rf /var/lib/</code></p>\n<p>删掉了整个<code>/var/lib</code>文件夹，好多命令都失效了，后来通过复制live系统的同名文件夹恢复了一部分，但是存储在<code>/var/lib/pacman/local</code>下的已安装软件包数据库由于其独特性，无法全部恢复，造成的后果就是使用pacman安装软件包时会提示某些依赖库已存在。</p>\n<h1 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h1><p>​        去社区看了下，arch中各种原因导致loacaldb损坏的案例不少见，但是像我这么蠢的原因应该找不出第二个😅(</p>\n<p>​        查找Archwiki上关于pacman 本地数据库损坏的修复方式，找到了这个条目:</p>\n<p><code>https://wiki.archlinux.org/index.php/Pacman/Restore_local_database</code></p>\n<p>通过读取pacman日志并进行过滤的方式恢复出已安装包的数据</p>\n<p>​        首先确认日志文件存在</p>\n<p>​        <code>cat /var/log/pacman.log</code></p>\n<p>这一步如果找不到日志或者日志只有少数几行，建议使用archlinux社区中的软件包检测脚本。</p>\n<p>使用shell awk语法编写过滤脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/awk -f</span></span><br><span class=\"line\">i = 3 &#123;&#125;</span><br><span class=\"line\"><span class=\"variable\">$3</span> ~ /^\\[[^]]+\\]$/ &#123;</span><br><span class=\"line\">  i = 4</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$i</span> ~ /^(installed|upgraded)$/ &#123;</span><br><span class=\"line\">  pkg[$(i+1)] = 1</span><br><span class=\"line\">  next</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"variable\">$i</span> == <span class=\"string\">&quot;removed&quot;</span> &#123;</span><br><span class=\"line\">  pkg[$(i+1)] = 0</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">END &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> pkg) <span class=\"keyword\">if</span> (pkg[i]) <span class=\"built_in\">print</span> i</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>随后执行<code>chmod +x  xxx.awk</code>并运行这个脚本<code>./xxx.awk /var/log/pacman.log &gt; pkglist.orig</code></p>\n<p>文件pkglist.orig即包含了所有执行过安装操作的软件包</p>\n<p>手动检查pkglist.orig删除来源非官方仓库的软件包，如自行编译构建的aur包等</p>\n<p>接下来执行<code>&#123; cat pkglist.orig; pacman -Slq; &#125; | sort | uniq -d &gt; pkglist</code>过滤无法从仓库中安装的其他包</p>\n<p>现在软件包列表已经基本完善，到这一步之后由于我使用的终端语法和bash稍有不同，后面的脚本内容总会因为不明原因报错。</p>\n<p>于是使用文本编辑工具将pkglist中换行符替换成空格，并使用<code>sudo pacman -S xxx --overwrite &quot;*&quot;  </code>覆盖安装列表中全部软件包，这时pacman本地数据库已经基本恢复，已安装软件包均可正常更新和移除。</p>\n<h1 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h1><p>更改docker容器存储路径正确姿势：</p>\n<p>​        编辑<code>/var/lib/systemd/system/docker.service</code>的启动参数，使用–graph指定docker存储路径。</p>\n<p>之后<code>systemctl daemon-reload``systemctl restart docker</code></p>\n<p>tips: linux使用rm命令误删除文件后第一选择是通过命令进程找回，如不慎关机重启建议使用数据恢复软件，以上两条皆无效时再考虑从其他主机scp或者复制文件到本机，本文中由于使用的操作系统为全新安装，无重要数据故采用第三种方式。</p>\n<p>最后，为了保护数据安全，请经常备份重要数据并减少使用rm命令，改为转移文件到额外的中转目录中，并定期进行清理。</p>\n<p>~</p>\n","categories":[],"tags":[]},{"title":"使用UnblockNeteaseMusic解鎖網易雲音樂無版權付費歌曲","url":"http://codea.ink/2020/02/22/unblockneteasemusic/","content":"<p><strong>首先聲明:本文所述方式僅限於學習交流及安全測試,請尊重創作者知識產權,遵守所在地相關法律規定</strong></p>\n<blockquote>\n<p>Github項目UnblockNeteaseMusic</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/nondanee/UnblockNeteaseMusic</span><br></pre></td></tr></table></figure>\n\n<p>這裏主要介紹代理服務器的搭建及配置.</p>\n<p>1.安裝node.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Debian/Ubuntu系统</span></span><br><span class=\"line\">curl -sL https://deb.nodesource.com/setup_10.x | bash -</span><br><span class=\"line\">apt install -y nodejs git </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#CentOS系统</span></span><br><span class=\"line\">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class=\"line\">yum install nodejs git -y</span><br></pre></td></tr></table></figure>\n\n<p>2.運行UnblockNeteaseMusic</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/nondanee/UnblockNeteaseMusic.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> UnblockNeteaseMusic</span><br><span class=\"line\">node app.js</span><br></pre></td></tr></table></figure>\n\n<p>這時會啓動代理服務器,默認端口8080,如需更改代理端口,可通過修改<code>config.port</code>對應數值或運行時指定參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node app.js -p &lt;port&gt;</span><br></pre></td></tr></table></figure>\n\n<p>3.開機自啓</p>\n<p>使用<code>systemd</code>進程守護(僅適用於Centos7+,Ubuntu16+)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">編輯/etc/systemd/system/UnblockNeteaseMusic.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=UnblockNeteaseMusic</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">Wants=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">PIDFile=/var/run/UnblockNeteaseMusic.pid</span><br><span class=\"line\">WorkingDirectory=/root/UnblockNeteaseMusic</span><br><span class=\"line\">ExecStart=$(<span class=\"built_in\">command</span> -v node) app.js -p 4567</span><br><span class=\"line\">RestartPreventExitStatus=23</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n\n<p>​    啓動並設置自啓：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start UnblockNeteaseMusic</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> UnblockNeteaseMusic</span><br></pre></td></tr></table></figure>\n\n<p>其它系統設定原理相同（應該也不會有人拿arch做服務器</p>\n<p>4.使用方法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">如無公網ip，需保證代理服務器和客戶端處於同一局域網內</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">Windows/Macosx:打開網易暈音樂客戶端 設置&gt;&gt;工具&gt;&gt;自定義代理&gt;&gt;http代理</span><br><span class=\"line\">Linux:由於<span class=\"number\">2.0</span>以上版本客戶端閹割了內置代理設置，可以使用proxychain等命令行工具設置代理</span><br><span class=\"line\">Andorid:設置&gt;&gt;WLAN&gt;&gt;高級設置</span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[]},{"title":"UDP转发53端口绕过校园网登录验证","url":"http://codea.ink/2019/12/16/udp53crackschoolwifi/","content":"<p><strong>首先声明，本文所提供的方法仅可用于学习及安全测试，请注意使用过程中所产生的授权问题及遵守相关规定。</strong></p>\n<p>　   许多高校使用的校园网登录机制都是利用网关拦截数据包，当用户接入校园网且未登录时，进行上网操作发出的数据包就会被网关所拦截，但是用于域名解析(DNS)的UDP53端口发出的数据包就不会被拦截，此处可以用一个简单的明令进行测试。</p>\n<p>使用Windows内置的nslookup命令,如:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nslookup baidu.com</span><br></pre></td></tr></table></figure>\n\n<p>若返回正确的ip地址，则说明你所在的网络中网关并没有对UDP53端口进行拦截，可使用本文中的方法进行登录绕过。</p>\n<p>首先准备一台有公网IP的服务器，推荐安装linux系统(Ubuntu，Debian，Centos都可以)</p>\n<p>注：绕过后的网速取决于所选用服务器的带宽和校园网单设备限速，为两者最小值。</p>\n<p>这里使用一台 Ubuntu系统服务器做为示例</p>\n<p>首先使用SSH工具连接上服务器，也可使用Windows或linux命令行连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh username@ip -p port</span><br></pre></td></tr></table></figure>\n\n<p>username是ssh登陆的用户，ip则是服务器公网ip，-p为指定端口，默认22。</p>\n<p>第一次登录需要更新软件源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ubuntu:apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\">Centos:yum update</span><br></pre></td></tr></table></figure>\n\n<p>接着下载所需软件的源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.softether-download.com/files/softether/v4.31-9727-beta-2019.11.18-tree/Linux/SoftEther_VPN_Server/64bit_-_Intel_x64_or_AMD64/softether-vpnserver-v4.31-9727-beta-2019.11.18-linux-x64-64bit.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>下载地址可能需要科学上网，方法此处不再赘述。</p>\n<p>完成后安装编译环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ubuntu:apt-get install make gcc g++ -y`</span><br><span class=\"line\"></span><br><span class=\"line\">Centos:yum install make gcc g++ -y`</span><br></pre></td></tr></table></figure>\n\n<p>解压下载的源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf softether-vpnserver-v4.31-9727-beta-2019.11.18-linux-x64-64bit.tar.gz`</span><br><span class=\"line\"><span class=\"built_in\">cd</span> vpnserver</span><br><span class=\"line\">su</span><br></pre></td></tr></table></figure>\n\n<p>切换到root用户</p>\n<p>执行<code>./.install.sh</code>根据提示输入三次1</p>\n<p>安装完成后启动openVPN服务器<code>./vpnserver start</code></p>\n<p>执行<code>./vpncmd</code>并按提示输入1</p>\n<p>此时服务端所需操作全部完成，接下来进行客户端操作。</p>\n<p>在<a href=\"http://www.softether-download.com/cn.aspx\">http://www.softether-download.com/cn.aspx</a>  下载openvpn管理工具</p>\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216222950.png\" alt=\"avatar\" style=\"zoom: 67%;\" />\n\n<p>新建连接，在主机名处输入ip地址，点击确定后双击新建的连接，按照提示设置新的管理密码。</p>\n<p>在弹出的第一个窗口中点击使用vpn的其他高级配置，第二个窗口点否。</p>\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216223635.png\" alt=\"avatar\" style=\"zoom:67%;\" />\n\n<p>新建用户并设置用户名及密码</p>\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216225049.png\" alt=\"avatar\" style=\"zoom:67%;\" />\n\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216223955.png\" alt=\"avatar\" style=\"zoom:67%;\" />\n\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216224212.png\" alt=\"avatar\" style=\"zoom:67%;\" />\n\n<img src=\"https://codeaoss.oss-cn-beijing.aliyuncs.com/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20191216224303.png\" alt=\"avatar\" style=\"zoom:67%;\" />\n\n<p>打开压缩文件中的remote配置文件，并修改其中的url及端口。</p>\n<p>将生成的remote配置文件导入openvpn客户端中，输入设置的用户名和密码，连接成功即可绕过校园网登录验证。</p>\n","categories":[],"tags":[]},{"title":"初雪杂谈","url":"http://codea.ink/2019/11/13/thesnow/","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"0785be4b7c7e8704296f6e89d51c465cf0f5b0aeaa9ce66b41b5726ea69f82bf\">9e7eafae5e8af1f5548439f2c32d91098cfdaea3b5057f3d63e72de12397882da643ceaf3e5b5d9443ebfd578ea894240b158b7e48db0ad59c5f1c2bc33ec0450bb834f60a08ba5f3ae2fc9d44e5db1a1f1e8b78ad70fbf69263e931f74dc01872d092726518cd70794fd17a4ed7698692cd7f652c684aa01a7747f0a24d20e2d402c05b3fccb5458a82fd7eeba73d701c90f1c7d0dba7e00665439228fa84226af06a34531d10517ef61783078c77161a76fbffb10606916ffb698055fb32569e623401be0dc5ebe14a73ff9cad2e3a89a700b682178eb7b98db8d700e481cc6ac215e9d089271c95b4a32a90b4a822f55f559a3e52fe0bb95f04298ac8663b123c7dcf8ecc0e3b3a6036c47d44591dd182d6140f2eb8df0d4acb73c47d4e945e73e963da853beb65abb7b9bd680ade643d94885ccdb6b7a8280e3c461f639208f6b6c81e6f8349ad94c0fb5a0da89b4f12b81c10940d7eceb0837fe785e7dd72b73e76ce45441b63b036067ffe23ffda90d8022e8dde9e0a71cb7cde2019ca531887cdccc218c0b5cce80ee916cf6cc38e6759e8187ff857b595b04d94ed4928fd891bdc66796b783c2961d2f70e208b554dac3ea47b22cc07d2fe581b54e18b729d21a8f8d148eaffc57dd2c0688b9ed79639d2811576b5eccc40f2b32c16f46b931ab7fe7bd1d5e4c2b23dd9fab8cea4e105d525e22951ef03e4568b1ca996d9837ef7d7898a2a76eaa59814653e05287d67af1793b9569cfc114e69a359780fb8024245cadce69d0ca7728c3a6412c586b990f14cfdce4d5a33f37bafc970f3287700e7b6e62939bf4a13f86c1c900ade388f68ce28b9ee5585a1e912f6d378e11703dfa43fb46bb3f505be3d7ce1db4bb8a29219e76b347519824184dc8b02130038d8369ef9b2f8c6a8c1bd64b2643d51cedb3376fa3857c0dae6447a7aa921a68ba9d4920f547bb8b519a4bed28cdf04cb346fed7db436323f49462963b6bfd2f3df1207d9d0416f096ebc6aef149ea2782fd6ea6c8a1a796e2aca1e226068bc98728308610ab9c42bddf29bc47744d7a12582620d607174f394f68569aacc1ee5ccbcc8e600e5636ee40541bb6424dbd95ce3a2bb53bc85e83a1f6fc595f7ae5c1235d24a75b21a6f0e3948a7f0f1680d15c4736924bcbf06466c6a47424cd47bbb1559c24a27a497fe561ebee31f25c6eadb9efeb2ca3f8efec1fff5a494d465ab7fcccc4752fbd7bb3dbab1b69a60bac0680d29a54827330a0ab70fc3833ad291a5547243fda0104bf5a02f8f95184224cabf91cf5da21a2f7f59d4fde65bcc25c4528cc97da9aa5cd81986db23e99502dbbcb5af061279c11fb2d6aabec8f64b9ee704b596536fe3873c4bf02ace7b01b84161d007d20b8f913aec17a2485ccc6594181ea00af036d2954f5499882b4688c994d48bbb65d4b00ca731a062d8a24bd696f894ec79535595e7070f6f62f797344b75fd1922041494300f32c8dfb5c64519ad26d8698587d7b5d86c8a8886cbf16d96627fb2591d23704905bb2e37bad3c61d9d1d56e1c9f041eef62e805312863ab2e7aa8ffe5f2fb2ab9419e063fee023303550c1773e241e4f0c53721b66b50dec2f75913cb393bd9c0e0942d9cd99460638d2580c63fe56b140501d8822a971ce90e79bebfac6ed56654eed2fe47f52dc3f57b3edc4b5ed4704ae18b4da46751505d5595368153a7d646d281335e64496c8449d1d4740d179354b859e631092861f96909431848f6d14a20a781dfd0e4d2be4d7bad28c8200938ba3c37114f04c7c557c4176e95db563fc40ab1bf92b74cb1f4687dbf6c69c07beb32546af34ce1a4970d379efdeb1dd73533ec2a808ddfb8a5f34a964b3d50fe263d1f7dc7ccff5b1ed23a59b8b0048cdc87ff3b5a64cf6320920b7b8e60f5f31d991bda248a4e73049394de5740e4bfd36cdd0c14008d9a3fff3427505a6c1ec3d9d0b963873bc5a1caf4d7e80054b088c6ea792e690fd0033f5681c7c1db4cff90e90239012d2e065fa70abd389eb5e67cc398be1cac133f97ca9611e1001dfd5f453228d61ae2bbc5d9eb6384d95afe6de4d7fda542de1e730a88c9e7c58522bf6618f84baa69b20c0aec887d29711177e1934a30e3db91a9d8154ea77279525b7fd46ad5f45c48a5a0926c308c5480f96581c0042756e9d27ff20532a23563ee57fb08a3d29bf6bd70dc4e339887d7f33d4f389112725d005f6735363d5978f56179f099757df1bc26ee4ca2b29e0efd6013493a933d96a1117a3ed8e2ad34fbbaec23501bdd00fbcad1143c0b6fadb7f6a753702a8de9db98ed6f9e8f34020b1202a79aba8e9e8533a42ac371fbaa39a56f63967dbba5fe5157f66de63979aaaa9e4ffeb09e786005a97f185ed065dbacea3c70c802be707a76d6c539a7412c8da5eb1b74de6736d6f85de42893472c06833f1166f3ca4f2d96762bcb488ecca648b4fdc809316d065ea473283d59e8c33785575b2209279dbb16e3e72d1d3e3b1b7798830da377dc167cc7208bab465fe7499234ec7fecb466987cbef60c9a3cb6edfc2e9e0695042739ee1110055943dca6785c1c4d1cc1e884b30e075a2304ddd88d377eeda9cba227e112b62d1aa2f26ef59c1852a73dfca4361c0fc9a255abba2ff2edc96083ee35ba264af6052c587d147de0022b1174d0334f99ca1e010073418baaeef8768793fbce7cbc3341aa23253c26d290aaf4f7d9899a1b719672da936f62b6898da174abf4194ff6bff4f062d0e014e5913c5cb3d851a818512e73612f64e891244b1c260d1ab02dae0404c3513063cb8dc6ba3deb3fe6738c69afc74a6c1b0fbe7c7d87a9035eff555a0937936d513793d53c90dadd1b398f5e39e6591b8f542507f7434d12459757ad26c4253cf538a4090bff1dbc4cc8b74f48d770185e02b00bb9b8ed6e2453a71af90c617e770911ae6cd83e156c8f4d41de3edfd80dfbc403b67986e72a57e1aead1181e5f6df57095d3fe8b2d774c07e170ce05f3858eb69df3239ee83846f97e7078e4ec1b6bcfa1daf2b14854d24c348b65e98f5c92994de30f5c2e60907d5e0651ac2ec51923761a43b587a8ecabdf9f6c245e33b650397c1a8589d7599d8acecc99ae9eb6396089e1946a0caf5f1de2ab1f468ae7324bf33b39ab9f526c6312967b746bff2ad5bbba4b7ed07a923a3ef460df727bb0f95bed891893234236d6cade22a1ac60924585fafc4965e24715c5cb60057cd88d97f759acbd884b67e4e6eea37a5f5a5d62c516ab0626e404622a449ef765ca11f18583312c55d64ba68176f0412e4e6ce1c5624f6fbeb445e349b8405be196ec8b4d3735ea89dd0629037adf21072ca4d46e858bd8b99e997b3ead7fdd4d21d5f4e7e01755f1a57f830324a5e343201507e6bb48db892286908fc9153051321b741b32751e618eb9ed66aac699efadb81780b9d369fc5fee8bade4cd4a9a9bce139c10cf7e09429322aafc5fe7b6b9ec6673ef1b3f6bdcbe8d34c5b5696679aabda763acf26da73992fc65946003bc0fc8ba655f64c802e3e80fa0078a96808bd8841926a0f5875de030304d4ff3f4fe</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["日常","随笔"],"tags":["随笔","日常"]},{"title":"link","url":"http://codea.ink/link/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://codea.ink/category/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://codea.ink/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://codea.ink/tag/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://codea.ink/category/index-1.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://codea.ink/css/mystyle.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('https://codeaoss.oss-cn-beijing.aliyuncs.com/wallhaven-ne75o4.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","categories":[],"tags":[]},{"title":"about","url":"http://codea.ink/about/index.html","content":"","categories":[],"tags":[]}]